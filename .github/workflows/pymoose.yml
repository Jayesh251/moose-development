name: Build and Test

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-latest]
        build_type: [Release]
        c_compiler: [clang]
        python-version: ["3.12"]
        gsl_version: ["2.6", "2.7", "2.8"]  # Multiple GSL versions
        include:
          - os: ubuntu-22.04
            apt: true
          - os: macos-14
            brew: true
          - os: windows-latest
            winget: true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: moose
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=${{ matrix.python-version }}
            pkg-config
            clang
            hdf5
            pybind11[global]
            graphviz
            pytables
            numpy
            matplotlib
            vpython
            lxml
            doxygen
            setuptools
            wheel
            meson
            ninja
            meson-python
          post-cleanup: all
          generate-run-shell: false

      - name: Install GSL (Linux)
        if: matrix.apt
        run: |
          sudo apt-get update
          sudo apt-get -y install libgsl-dev libhdf5-dev

      - name: Install GSL (MacOS)
        if: matrix.brew
        run: |
          brew install gsl@${{ matrix.gsl_version }}
          brew install hdf5

      - name: Install GSL (Windows)
        if: matrix.winget
        run: |
          micromamba install gsl=${{ matrix.gsl_version }}

      - name: Display Python Version
        run: |
          python -c "import sys; print(sys.version)"

      - name: Build and Install (Non-Windows)
        if: runner.os != 'Windows'
        run: |
          eval "$(micromamba shell hook --shell bash)"
          micromamba activate moose
          python -c "import sys; print('#' * 60, sys.version)"
          pip install python-libsbml
          pip install .
          python -c "import moose; moose.le()"

      - name: Build and Install (Windows)
        if: runner.os == 'Windows'
        run: |
          micromamba shell hook -s powershell | Out-String | Invoke-Expression
          micromamba activate moose
          python -c "import sys; print('#' * 60, sys.version)"
          pip install python-libsbml
          pip install .
          python -c "import moose; moose.le()"
